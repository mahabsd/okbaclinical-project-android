{"version":3,"sources":["webpack:///src/app/pages/chat/chat.component.html","webpack:///src/app/pages/chat/chat.service.ts","webpack:///src/app/pages/chat/chat.module.ts","webpack:///src/app/pages/chat/chat.component.ts","webpack:///src/app/pages/chat/chat.component.scss"],"names":["ChatService","httpClient","url","socket","idCandidat1","idCandidat2","get","message","idChat","post","chatId","routes","path","component","pathMatch","ChatModule","imports","forChild","declarations","ChatComponent","appSettings","chatService","auth","messagesService","userImage","sidenavOpen","token","localStorage","getItem","decoded","JSON","parse","stringify","userId","_id","listeMessages","listeCandidats","settings","window","innerWidth","messageForm","content","candidat","logo","user","profile","image","on","getAllUsers","subscribe","res","chats","filter","obj","clickUser","chosenUser","idCandidat","getPrivateMessage","conversation","currentChat","sidenav","close","talks","messages","formData","FormData","file","append","name","Object","keys","value","forEach","fieldName","sendMessage","myFiles","patchValue","files","reciever","text","userOwner","chatUrl","sendNotification","event","target","deleteChat","length","selector","template","providers"],"mappings":"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","file":"pages-chat-chat-module-es5.js","sourcesContent":["export default \"<app-content-header [title]=\\\"'Chat'\\\" [hideBreadcrumb]=\\\"false\\\" [hasBgImage]=\\\"true\\\" [class]=\\\"'pb-5'\\\"></app-content-header>\\r\\n\\r\\n<mat-toolbar color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"px-2 chat-toolbar\\\">\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n        <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n            <mat-icon>list</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button class=\\\"mx-2\\\">\\r\\n            <mat-icon>search</mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n    <form class=\\\"user-search\\\" >\\r\\n        <mat-form-field class=\\\"user-search-input\\\">\\r\\n            <input matInput placeholder=\\\"Search user by name...\\\" [(ngModel)]=\\\"searchText\\\" name=\\\"search\\\">\\r\\n        </mat-form-field>\\r\\n    </form>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n        <mat-list class=\\\"p-0\\\">\\r\\n            <mat-list-item>\\r\\n                <img matListAvatar [src]=\\\"currentChat.candidat1._id != userId ?currentChat.candidat1.profile.image : currentChat.candidat2.profile.image \\\"\\r\\n                    class=\\\"author-img\\\">\\r\\n            </mat-list-item>\\r\\n        </mat-list>\\r\\n        <span class=\\\"author-name\\\">{{currentChat.candidat1._id != userId ?currentChat.candidat1.profile.name :currentChat.candidat2.profile.name }} {{currentChat.candidat1._id != userId ?currentChat.candidat1.profile.surname :currentChat.candidat2.profile.surname}}</span>\\r\\n        <button mat-icon-button [matMenuTriggerFor]=\\\"personMenu\\\" #personMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n            <mat-icon>more_vert</mat-icon>\\r\\n        </button>\\r\\n        <mat-menu #personMenu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\r\\n            <span (mouseleave)=\\\"personMenuTrigger.closeMenu()\\\">\\r\\n                <button mat-menu-item (click)=\\\"personInfo.toggle()\\\">\\r\\n                    <mat-icon>account_circle</mat-icon>\\r\\n                    <span>Contact info</span>\\r\\n                </button>\\r\\n                <button mat-menu-item (click)=\\\"deleteChat(currentChat._id)\\\">\\r\\n                    <mat-icon>delete_forever</mat-icon>\\r\\n                    <span>Clear chat</span>\\r\\n                </button>\\r\\n            </span>\\r\\n        </mat-menu>\\r\\n    </div>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n        <mat-card class=\\\"p-0 chat\\\">\\r\\n            <mat-drawer-container class=\\\"chat-container\\\">\\r\\n                <mat-drawer #sidenav [opened]=\\\"sidenavOpen\\\" [mode]=\\\"sidenavOpen ? 'side' : 'over'\\\"\\r\\n                    class=\\\"chat-sidenav mat-elevation-z1\\\" autoFocus=\\\"false\\\">\\r\\n                    <mat-nav-list class=\\\"p-0 chat-sidenav-list\\\" perfectScrollbar>\\r\\n                        <mat-list-item *ngFor=\\\"let chat of listeCandidats |  UserSearchPipe : searchText\\\" (click)=\\\"clickUser(chat._id)\\\" >\\r\\n                            <img matListAvatar [src]=\\\"chat.profile.image\\\">\\r\\n                            <h6 matLine> {{chat.profile.name}} {{chat.profile.surname}}  </h6>\\r\\n                            <p matLine fxLayout=\\\"row\\\" fxLayoutAlign=\\\"none center\\\" class=\\\"secondary-text-color\\\">\\r\\n                                <span [ngSwitch]=\\\"chat.authorStatus\\\">\\r\\n                                    <mat-icon *ngSwitchCase=\\\"'Online'\\\" class=\\\"chat-status-icon\\\">check_circle</mat-icon>\\r\\n                                    <mat-icon *ngSwitchCase=\\\"'Offline'\\\" class=\\\"chat-status-icon\\\">highlight_off\\r\\n                                    </mat-icon>\\r\\n                                    <mat-icon *ngSwitchCase=\\\"'Away'\\\" class=\\\"chat-status-icon\\\">schedule</mat-icon>\\r\\n                                    <mat-icon *ngSwitchCase=\\\"'Do not disturb'\\\" class=\\\"chat-status-icon\\\">not_interested\\r\\n                                    </mat-icon>\\r\\n                                </span>\\r\\n                                <!-- <span class=\\\"author-status\\\">{{chat.authorStatus}}</span> -->\\r\\n                            </p>\\r\\n                        </mat-list-item>\\r\\n                    </mat-nav-list>\\r\\n                </mat-drawer>\\r\\n\\r\\n                <div>\\r\\n                    <div class=\\\"chat-content\\\" [class.actions-visible]=\\\"talks\\\" perfectScrollbar >\\r\\n                        <mat-list *ngIf=\\\"talks\\\" class=\\\"p-0\\\">\\r\\n                            <mat-list-item *ngFor=\\\"let talk of talks \\\" class=\\\"talk-item\\\">\\r\\n                                <img matListAvatar [src]=\\\"talk.logo\\\"  *ngIf=\\\"(talk.content != undefined && talk.content != '' )||(talk.files != undefined && talk.files != '' )\\\">\\r\\n                                <p matLine class=\\\"message\\\" >\\r\\n                                    <span [ngClass]=\\\"(talk.candidat !== userId) ? 'bg-primary' : 'bg-accent'\\\"\\r\\n                                    *ngIf=\\\"talk.content != undefined && talk.content != '' \\\" >{{talk.content}}</span>\\r\\n                                </p>\\r\\n                                <p matLine class=\\\"message\\\" *ngIf=\\\"talk.files.length > 0\\\">\\r\\n                                    <a [href]=\\\"talk.files\\\"\\r\\n                                        [ngClass]=\\\"(talk.candidat != userId) ? 'bg-primary' : 'bg-accent'\\\">{{talk.files[0] | slice:-17}}</a>\\r\\n                                </p>\\r\\n                                <p matLine class=\\\"message-date\\\">\\r\\n                                    <small *ngIf=\\\"(talk.content != undefined && talk.content != '' )|| talk.files.length >0\\\" >{{talk.createdDate |timeAgo}}</small>\\r\\n                                </p>\\r\\n                            </mat-list-item>\\r\\n                        </mat-list>\\r\\n                        <div *ngIf=\\\"!talks\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"h-100 empty\\\">\\r\\n                            <mat-icon>chat</mat-icon>\\r\\n                            <p>Select a interlocutor for talk</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <mat-card *ngIf=\\\"talks\\\" class=\\\"chat-actions\\\">\\r\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                            <form [formGroup]=\\\"messageForm\\\">\\r\\n                                <mat-form-field class=\\\"w-100\\\">\\r\\n                                    <input matInput placeholder=\\\"Enter your text...\\\" formControlName=\\\"content\\\">\\r\\n                                </mat-form-field>\\r\\n\\r\\n                            </form>\\r\\n                            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"scenter center\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"myFiles\\\" [(ngModel)]=\\\"myFiles\\\" (change)=\\\"selectFile($event)\\\" accept=\\\"file/*\\\">\\r\\n                                <!-- <mat-icon>attach_file</mat-icon> -->\\r\\n                                <button mat-mini-fab color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"sendMessage()\\\">\\r\\n                                    <mat-icon>send</mat-icon>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </mat-card>\\r\\n                </div>\\r\\n\\r\\n                <mat-drawer #personInfo mode=\\\"over\\\" position=\\\"end\\\" class=\\\"person-info-sidenav mat-elevation-z1\\\"\\r\\n                    autoFocus=\\\"false\\\">\\r\\n                    <div class=\\\"p-0 h-100\\\" perfectScrollbar>\\r\\n\\r\\n                        <div class=\\\"bg-primary w-100 text-center\\\">\\r\\n                            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"p-2\\\">\\r\\n                                <h2>Contact Info</h2>\\r\\n                                <button mat-icon-button (click)=\\\"personInfo.toggle()\\\">\\r\\n                                    <mat-icon>close</mat-icon>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                            <img *ngIf=\\\"currentChat\\\"\\r\\n                                [src]=\\\"currentChat.candidat1._id != userId ?currentChat.candidat1.profile.image :currentChat.candidat2.profile.image\\\" class=\\\"py-2\\\">\\r\\n                            <h2 *ngIf=\\\"currentChat\\\" class=\\\"pb-3\\\">{{currentChat.candidat1._id != userId ?currentChat.candidat1.profile.surname :currentChat.candidat2.profile.surname }} {{currentChat.candidat1._id != userId ?currentChat.candidat1.profile.name :currentChat.candidat2.profile.name }}</h2>\\r\\n                        </div>\\r\\n                        <mat-list>\\r\\n                            <mat-list-item>\\r\\n                                <mat-icon matListIcon class=\\\"secondary-text-color\\\">mail_outline</mat-icon>\\r\\n                                <h3 matLine>{{currentChat.candidat1._id != userId ?currentChat.candidat1.contacts.email:currentChat.candidat2.contacts.email}}</h3>\\r\\n                            </mat-list-item>\\r\\n                            <mat-list-item>\\r\\n                                <mat-icon matListIcon class=\\\"secondary-text-color\\\">call</mat-icon>\\r\\n                                <h3 matLine>{{currentChat.candidat1._id != userId ?currentChat.candidat1.contacts.phone:currentChat.candidat2.contacts.phone}}</h3>\\r\\n                            </mat-list-item>\\r\\n                            <mat-list-item>\\r\\n                                <mat-icon matListIcon class=\\\"secondary-text-color\\\">location_on</mat-icon>\\r\\n                                <h3 matLine>Y</h3>\\r\\n                            </mat-list-item>\\r\\n                        </mat-list>\\r\\n                    </div>\\r\\n                </mat-drawer>\\r\\n\\r\\n            </mat-drawer-container>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\";","import { Injectable } from '@angular/core'\r\nimport { Chat } from './chat.model';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport * as io from 'socket.io-client';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport jwt_decode from \"../../../../node_modules/jwt-decode\";\r\n\r\n\r\n@Injectable()\r\nexport class ChatService {\r\n  private url = 'http://localhost:3000';\r\n  socket: any;\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    this.socket = io(this.url);\r\n  }\r\n\r\n  getPrivateMessage(idCandidat1, idCandidat2) {\r\n    return this.httpClient.get(this.url + '/chat/getPrivateMessage/' + idCandidat1 + '/' + idCandidat2);\r\n  }\r\n  sendMessage(message, idChat) {\r\n    return this.httpClient.post(this.url + '/chat/sendMessage/' + idChat, message);\r\n  }\r\n  deleteChat(chatId) {\r\n    return this.httpClient.get(this.url + '/chat/deleteChat/' + chatId);\r\n  }\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { ChatComponent } from './chat.component';\r\nimport { PipesModule } from '../../theme/pipes/pipes.module';\r\n\r\nexport const routes = [\r\n  { path: '', component: ChatComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    PerfectScrollbarModule,\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n    PipesModule\r\n  ],\r\n  declarations: [\r\n    ChatComponent\r\n  ]\r\n})\r\nexport class ChatModule { }","import { Component, OnInit, HostListener, ViewChild } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport { AppSettings } from '../../app.settings';\r\nimport { Settings } from '../../app.settings.model';\r\nimport { Chat } from './chat.model';\r\nimport { ChatService } from './chat.service';\r\nimport { throttleTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport jwt_decode from \"../../../../node_modules/jwt-decode\";\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { MessagesService } from 'src/app/theme/components/messages/messages.service';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.scss'],\r\n  providers: [ChatService, MessagesService]\r\n})\r\nexport class ChatComponent implements OnInit {\r\n  @ViewChild('sidenav') sidenav: any;\r\n  public settings: Settings;\r\n  public userImage = 'assets/img/users/user.jpg';\r\n  public chats: Array<Chat>;\r\n  public talks: Array<Chat>;\r\n  public sidenavOpen: boolean = true;\r\n  public currentChat;\r\n  public newMessage: string;\r\n\r\n  listeCandidats: any;\r\n  chosenUser: any;\r\n  listeMessages: any;\r\n  messageForm: FormGroup;\r\n  conversation: any;\r\n  logo;\r\n  token = localStorage.getItem('token');\r\n  decoded = JSON.parse(JSON.stringify(jwt_decode(this.token)))\r\n  userId = this.decoded._id\r\n  file;\r\n  formData;\r\n  myFiles: any;\r\n  searchText : any;\r\n  constructor(public appSettings: AppSettings,\r\n    private socket: Socket,\r\n    public chatService: ChatService,\r\n    public auth: LoginService,\r\n    private messagesService: MessagesService) {\r\n    this.listeMessages = [];\r\n    this.listeCandidats = [];\r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit() {\r\n      if (window.innerWidth <= 768) {\r\n      this.sidenavOpen = false;\r\n    }\r\n    this.messageForm = new FormGroup({\r\n      content: new FormControl(''),\r\n      candidat: new FormControl(this.decoded._id),\r\n      logo: new FormControl(this.decoded.user.profile.image)\r\n    });\r\n\r\n    this.socket.on('newUserAdded', () => {\r\n      this.auth.getAllUsers().subscribe((res: any[]) => {\r\n        this.chats = this.listeCandidats = res.filter(obj => obj._id !== this.userId);\r\n      });\r\n    });\r\n    this.auth.getAllUsers().subscribe((res: any) => {\r\n      this.chats = this.listeCandidats = res.filter(obj => obj._id !== this.userId);\r\n      this.clickUser(this.listeCandidats[0]._id);\r\n    });\r\n    this.socket.on('newMessageSended', () => {     \r\n      this.clickUser(this.chosenUser);\r\n    });\r\n  }\r\n\r\n  clickUser(idCandidat) {\r\n    this.chosenUser = idCandidat;\r\n    this.chatService.getPrivateMessage(idCandidat, this.userId).subscribe((res: any) => {\r\n      this.conversation = res._id;\r\n      this.currentChat = res\r\n      if (window.innerWidth <= 768) {\r\n        this.sidenav.close();\r\n      }\r\n      this.talks = this.listeMessages = res.messages;\r\n    });\r\n\r\n  }\r\n\r\n  sendMessage() {\r\n    this.formData = new FormData();\r\n\r\n    if (this.file != null) {\r\n      this.formData.append('myFiles', this.file, this.file.name);\r\n\r\n    }\r\n\r\n    Object.keys(this.messageForm.value).forEach(fieldName => {\r\n      this.formData.append(fieldName, this.messageForm.value[fieldName]);\r\n    })\r\n\r\n    this.chatService.sendMessage(this.formData, this.conversation).subscribe((res) => {\r\n    });\r\n    this.myFiles = '';\r\n    this.messageForm.patchValue({\r\n      content: '',\r\n      files: '',\r\n    });\r\n    this.file = null\r\n    let message = {\r\n      reciever: this.chosenUser,\r\n      text: \"sent you a message\",\r\n      userOwner: this.userId,\r\n      messages: true,\r\n      chatUrl : 'chat'\r\n    }\r\n    this.messagesService.sendNotification(message).subscribe();\r\n    // let chatContainer = document.querySelector('.chat-content');\r\n\r\n    // if (chatContainer) {\r\n    //   setTimeout(() => {\r\n    //     var nodes = chatContainer.querySelectorAll('.mat-list-item');\r\n    //     let newChatTextHeight = nodes[nodes.length - 1];\r\n    //     chatContainer.scrollTop = chatContainer.scrollHeight + newChatTextHeight.clientHeight;\r\n    //   });\r\n    // }\r\n\r\n  }\r\n\r\n  selectFile(event) {\r\n    if (event.target.value) {\r\n      this.file = <File>event.target.files[0];\r\n    }\r\n  }\r\n\r\n\r\n  deleteChat(chatId) {\r\n    this.chatService.deleteChat(chatId).subscribe(res => {\r\n    })\r\n  }\r\n\r\n  @HostListener('window:resize')\r\n  public onWindowResize(): void {\r\n    (window.innerWidth <= 768) ? this.sidenavOpen = false : this.sidenavOpen = true;\r\n  }\r\n\r\n\r\n  public ngOnDestroy() {\r\n    if (this.talks)\r\n      this.talks.length = 2;\r\n  }\r\n\r\n\r\n\r\n}","export default \".chat-container {\\n  height: calc(100vh - (56px + 56px + 148px));\\n}\\n\\n.chat-toolbar {\\n  background: transparent !important;\\n  height: 40px;\\n  margin-top: -40px;\\n}\\n\\n.chat-toolbar .author-img {\\n  width: 34px;\\n  height: 34px;\\n}\\n\\n.chat-toolbar .author-name {\\n  font-size: 16px;\\n  font-weight: 400;\\n}\\n\\n.chat {\\n  border-radius: 0;\\n}\\n\\n.chat .chat-actions {\\n  padding: 12px;\\n}\\n\\n.chat .talk-item {\\n  padding: 6px 0;\\n  height: 100%;\\n}\\n\\n.chat .message {\\n  white-space: unset;\\n  text-overflow: unset;\\n}\\n\\n.chat .message span {\\n  padding: 6px 10px;\\n  border-radius: 4px;\\n  display: inline-block;\\n  font-size: 14px;\\n}\\n\\n.chat .message-date {\\n  opacity: 0.8;\\n}\\n\\n.chat .empty mat-icon {\\n  font-size: 220px;\\n  height: 220px;\\n  width: 220px;\\n  opacity: 0.4;\\n}\\n\\n.chat .empty p {\\n  font-size: 18px;\\n  opacity: 0.8;\\n}\\n\\n.chat-status-icon {\\n  font-size: 14px;\\n  height: 14px;\\n  width: 14px;\\n  line-height: 22px;\\n  margin-right: 6px;\\n}\\n\\n.author-status {\\n  font-size: 13px;\\n}\\n\\n.chat-sidenav {\\n  border-right: 1px solid transparent;\\n  overflow: hidden;\\n}\\n\\n.chat-content {\\n  padding: 12px;\\n  height: calc(100vh - (56px + 56px + 174px));\\n}\\n\\n.chat-content.actions-visible {\\n  height: calc(100vh - (56px + 56px + 254px));\\n}\\n\\n.chat-sidenav-list {\\n  height: 100%;\\n}\\n\\n.person-info-sidenav {\\n  width: 280px;\\n}\\n\\n.person-info-sidenav h2 {\\n  font-weight: 400;\\n}\\n\\n.person-info-sidenav img {\\n  width: 120px;\\n  height: 120px;\\n  border-radius: 50%;\\n}\\n\\n@media (max-width: 960px) {\\n  .chat-container {\\n    height: calc(100vh - (56px + 56px + 130px));\\n  }\\n\\n  .chat-content {\\n    height: calc(100vh - (56px + 56px + 154px));\\n  }\\n  .chat-content.actions-visible {\\n    height: calc(100vh - (56px + 56px + 236px));\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxjaGF0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksMkNBQUE7QUFESjs7QUFHQTtFQUNJLGtDQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0FBQUo7O0FBQ0k7RUFDSSxXQUFBO0VBQ0EsWUFBQTtBQUNSOztBQUNJO0VBQ0ksZUFBQTtFQUNBLGdCQUFBO0FBQ1I7O0FBR0E7RUFDSSxnQkFBQTtBQUFKOztBQUNJO0VBQ0ksYUFBQTtBQUNSOztBQUNJO0VBQ0ksY0FBQTtFQUNBLFlBQUE7QUFDUjs7QUFDSTtFQUNJLGtCQUFBO0VBQ0Esb0JBQUE7QUFDUjs7QUFBUTtFQUNJLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxxQkFBQTtFQUNBLGVBQUE7QUFFWjs7QUFDSTtFQUNJLFlBQUE7QUFDUjs7QUFFUTtFQUNJLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0FBQVo7O0FBRVE7RUFDSSxlQUFBO0VBQ0EsWUFBQTtBQUFaOztBQUlBO0VBQ0ksZUFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VBQ0EsaUJBQUE7RUFDQSxpQkFBQTtBQURKOztBQUdBO0VBQ0ksZUFBQTtBQUFKOztBQUVBO0VBQ0ksbUNBQUE7RUFDQSxnQkFBQTtBQUNKOztBQUNBO0VBQ0ksYUFBQTtFQUNBLDJDQUFBO0FBRUo7O0FBREk7RUFDSSwyQ0FBQTtBQUdSOztBQUFBO0VBQ0ksWUFBQTtBQUdKOztBQURBO0VBQ0ksWUFBQTtBQUlKOztBQUhJO0VBQ0ksZ0JBQUE7QUFLUjs7QUFISTtFQUNJLFlBQUE7RUFDQSxhQUFBO0VBQ0Esa0JBQUE7QUFLUjs7QUFBQTtFQUNJO0lBQ0ksMkNBQUE7RUFHTjs7RUFERTtJQUNJLDJDQUFBO0VBSU47RUFITTtJQUNJLDJDQUFBO0VBS1Y7QUFDRiIsImZpbGUiOiJjaGF0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIi4uLy4uL3RoZW1lL3N0eWxlcy92YXJpYWJsZXNcIjtcclxuXHJcbi5jaGF0LWNvbnRhaW5lcntcclxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtICgjeyR0b3AtdG9vbGJhci1oZWlnaHR9ICsgI3skZm9vdGVyLXRvb2xiYXItaGVpZ2h0fSArIDE0OHB4KSk7XHJcbn1cclxuLmNoYXQtdG9vbGJhcntcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XHJcbiAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAtNDBweDtcclxuICAgIC5hdXRob3ItaW1ne1xyXG4gICAgICAgIHdpZHRoOiAzNHB4O1xyXG4gICAgICAgIGhlaWdodDogMzRweDtcclxuICAgIH1cclxuICAgIC5hdXRob3ItbmFtZXtcclxuICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIH1cclxuICAgICBcclxufVxyXG4uY2hhdHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDA7XHJcbiAgICAuY2hhdC1hY3Rpb25ze1xyXG4gICAgICAgIHBhZGRpbmc6IDEycHg7XHJcbiAgICB9ICAgIFxyXG4gICAgLnRhbGstaXRlbXtcclxuICAgICAgICBwYWRkaW5nOiA2cHggMDtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB9XHJcbiAgICAubWVzc2FnZXtcclxuICAgICAgICB3aGl0ZS1zcGFjZTogdW5zZXQ7XHJcbiAgICAgICAgdGV4dC1vdmVyZmxvdzogdW5zZXQ7ICAgICAgIFxyXG4gICAgICAgIHNwYW57XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDZweCAxMHB4O1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC5tZXNzYWdlLWRhdGV7XHJcbiAgICAgICAgb3BhY2l0eTogMC44O1xyXG4gICAgfVxyXG4gICAgLmVtcHR5e1xyXG4gICAgICAgIG1hdC1pY29ue1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDIyMHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDIyMHB4O1xyXG4gICAgICAgICAgICB3aWR0aDogMjIwcHg7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuNDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAwLjg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbi5jaGF0LXN0YXR1cy1pY29ue1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgaGVpZ2h0OiAxNHB4O1xyXG4gICAgd2lkdGg6IDE0cHg7XHJcbiAgICBsaW5lLWhlaWdodDogMjJweDtcclxuICAgIG1hcmdpbi1yaWdodDogNnB4O1xyXG59XHJcbi5hdXRob3Itc3RhdHVze1xyXG4gICAgZm9udC1zaXplOiAxM3B4O1xyXG59XHJcbi5jaGF0LXNpZGVuYXZ7XHJcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47ICAgXHJcbn1cclxuLmNoYXQtY29udGVudHtcclxuICAgIHBhZGRpbmc6IDEycHg7XHJcbiAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSAoI3skdG9wLXRvb2xiYXItaGVpZ2h0fSArICN7JGZvb3Rlci10b29sYmFyLWhlaWdodH0gKyAxNzRweCkpO1xyXG4gICAgJi5hY3Rpb25zLXZpc2libGV7XHJcbiAgICAgICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gKCN7JHRvcC10b29sYmFyLWhlaWdodH0gKyAjeyRmb290ZXItdG9vbGJhci1oZWlnaHR9ICsgMjU0cHgpKTtcclxuICAgIH1cclxufVxyXG4uY2hhdC1zaWRlbmF2LWxpc3Qge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcbi5wZXJzb24taW5mby1zaWRlbmF2e1xyXG4gICAgd2lkdGg6IDI4MHB4O1xyXG4gICAgaDJ7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIH1cclxuICAgIGltZ3tcclxuICAgICAgICB3aWR0aDogMTIwcHg7XHJcbiAgICAgICAgaGVpZ2h0OiAxMjBweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5AbWVkaWEgKG1heC13aWR0aDogOTYwcHgpIHsgXHJcbiAgICAuY2hhdC1jb250YWluZXJ7XHJcbiAgICAgICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gKCN7JHRvcC10b29sYmFyLWhlaWdodH0gKyAjeyRmb290ZXItdG9vbGJhci1oZWlnaHR9ICsgMTMwcHgpKTtcclxuICAgIH1cclxuICAgIC5jaGF0LWNvbnRlbnR7XHJcbiAgICAgICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gKCN7JHRvcC10b29sYmFyLWhlaWdodH0gKyAjeyRmb290ZXItdG9vbGJhci1oZWlnaHR9ICsgMTU0cHgpKTtcclxuICAgICAgICAmLmFjdGlvbnMtdmlzaWJsZXtcclxuICAgICAgICAgICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gKCN7JHRvcC10b29sYmFyLWhlaWdodH0gKyAjeyRmb290ZXItdG9vbGJhci1oZWlnaHR9ICsgMjM2cHgpKTtcclxuICAgICAgICB9ICBcclxuICAgIH0gIFxyXG59Il19 */\";"]}