{"version":3,"sources":["./src/app/pages/schedule/schedule-dialog/schedule-dialog.component.html","./src/app/services/schedule.service.ts","./src/app/pages/schedule/schedule.component.scss","./src/app/pages/schedule/schedule.component.ts","./src/app/pages/schedule/schedule.component.html","./src/app/pages/schedule/schedule-dialog/schedule-dialog.component.ts","./src/app/pages/schedule/schedule.module.ts"],"names":[],"mappings":"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","file":"pages-schedule-schedule-module-es2015.js","sourcesContent":["export default \"<h1 mat-dialog-title><span *ngIf=\\\"!form.controls.isEdit.value\\\">Add</span><span\\r\\n    *ngIf=\\\"form.controls.isEdit.value\\\">Edit</span> event</h1>\\r\\n<div mat-dialog-content>\\r\\n  <form [formGroup]=\\\"form\\\">\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n      <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n      <input matInput [matDatepicker]=\\\"start\\\" placeholder=\\\"Start Date\\\" formControlName=\\\"start\\\">\\r\\n      <mat-datepicker-toggle matSuffix [for]=\\\"start\\\"></mat-datepicker-toggle>\\r\\n      <mat-datepicker #start></mat-datepicker>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n\\r\\n      <textarea matInput placeholder=\\\"description\\\" formControlName=\\\"descrip\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n\\r\\n\\r\\n  </form>\\r\\n</div>\\r\\n<div mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n  <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"form.value\\\" [disabled]=\\\"!form.valid\\\"><span\\r\\n      *ngIf=\\\"!form.controls.isEdit.value\\\">Save</span><span *ngIf=\\\"form.controls.isEdit.value\\\">Update</span></button>\\r\\n  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"close()\\\">Cancel</button>\\r\\n</div>\";","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SchedulesService {\r\n \r\n  constructor(private http: HttpClient) {\r\n   \r\n  }\r\n \r\n  ScheduleUrl: string = environment.basUrl;\r\n \r\n  addSchedule(data) {\r\n    return this.http.post(this.ScheduleUrl + \"rendezvous/rendezVous/add\", data );\r\n  }\r\n  getSchedule(id) {\r\n    return this.http.get(this.ScheduleUrl + \"rendezvous/rendezVous\" + id,);\r\n  }\r\n  updateSchedule(id, data) {\r\n    return this.http.put(this.ScheduleUrl + \"rendezvous/rendezVous/update/\"+ id, data, );\r\n  }\r\n  deleteSchedule(id) {\r\n    return this.http.delete(this.ScheduleUrl + \"rendezvous/rendezVous/delete/\" + id, );\r\n  }\r\n  getAllSchedules() {\r\n    return this.http.get(this.ScheduleUrl + \"rendezvous/getAllRendezVous\",  );\r\n  }\r\n}\r\n","export default \".schedule-toolbar {\\n  background: transparent !important;\\n  height: 40px;\\n  margin-top: -40px;\\n}\\n\\n.cal-arrows {\\n  width: 160px;\\n}\\n\\n@media screen and (max-width: 600px) {\\n  .schedule-toolbar {\\n    background: transparent !important;\\n    height: 112px;\\n    margin-top: -112px;\\n  }\\n\\n  .cal-mobile {\\n    padding-bottom: 112px !important;\\n  }\\n\\n  .cal-arrows {\\n    width: auto;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxzY2hlZHVsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtDQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0FBQ0o7O0FBQ0E7RUFDSSxZQUFBO0FBRUo7O0FBQ0E7RUFDSTtJQUNJLGtDQUFBO0lBQ0EsYUFBQTtJQUNBLGtCQUFBO0VBRU47O0VBQUU7SUFDSSxnQ0FBQTtFQUdOOztFQURFO0lBQ0ksV0FBQTtFQUlOO0FBQ0YiLCJmaWxlIjoic2NoZWR1bGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2NoZWR1bGUtdG9vbGJhcntcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XHJcbiAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAtNDBweDtcclxufVxyXG4uY2FsLWFycm93c3tcclxuICAgIHdpZHRoOiAxNjBweDtcclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHsgICAgXHJcbiAgICAuc2NoZWR1bGUtdG9vbGJhcntcclxuICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xyXG4gICAgICAgIGhlaWdodDogMTEycHg7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogLTExMnB4O1xyXG4gICAgfVxyXG4gICAgLmNhbC1tb2JpbGV7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDExMnB4ICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgICAuY2FsLWFycm93c3tcclxuICAgICAgICB3aWR0aDogYXV0bztcclxuICAgIH1cclxufSJdfQ== */\";","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { CalendarEvent, CalendarEventAction, CalendarEventTimesChangedEvent } from 'angular-calendar';\r\nimport { startOfDay, endOfDay, subDays, addDays, endOfMonth, isSameDay, isSameMonth, addHours, parseISO } from 'date-fns';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ScheduleDialogComponent } from './schedule-dialog/schedule-dialog.component';\r\nimport { AppSettings } from '../../app.settings';\r\nimport { Settings } from '../../app.settings.model';\r\nimport { Subject } from 'rxjs';\r\nimport { blockTransition } from '../../theme/utils/app-animation';\r\nimport { SchedulesService } from 'src/app/services/schedule.service';\r\nimport jwt_decode from \"../../../../node_modules/jwt-decode\";\r\n\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#ad2121',\r\n    secondary: '#FAE3E3'\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF'\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA'\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: 'app-schedule',\r\n  templateUrl: './schedule.component.html',\r\n  styleUrls: ['./schedule.component.scss'],\r\n  animations: [blockTransition],\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    '[@blockTransition]': ''\r\n  }\r\n})\r\nexport class ScheduleComponent implements OnInit {\r\n  view: string = 'month';\r\n  viewDate: Date = new Date();\r\n  activeDayIsOpen: boolean = true;\r\n  actions: CalendarEventAction[] = [{\r\n    label: '<i class=\"material-icons icon-sm white\">edit</i>',\r\n    onClick: ({ event }: { event: CalendarEvent }): void => {\r\n      this.openScheduleDialog(event);\r\n     \r\n      \r\n    }\r\n  }, {\r\n    label: '<i class=\"material-icons icon-sm white\">close</i>',\r\n    onClick: ({ event }: { event: CalendarEvent }): void => {\r\n      this.events = this.events.filter(iEvent => iEvent !== event);\r\n      this.deleteSchedule(event);\r\n      this.snackBar.open('Event deleted successfully!', null, {\r\n        duration: 1500\r\n      });\r\n    }\r\n  }];\r\n  events: CalendarEvent[] = [];\r\n  refresh: Subject<any> = new Subject();\r\n\r\n  token = localStorage.getItem('token');\r\n  decoded = jwt_decode(this.token);\r\n  userId = JSON.parse(JSON.stringify(this.decoded))._id;\r\n  public settings: Settings;\r\n  schedules: any;\r\n  tab = [];\r\n  constructor(public appSettings: AppSettings,\r\n    public dialog: MatDialog,\r\n    public snackBar: MatSnackBar, public scheduleService: SchedulesService) {\r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAllSchedules();\r\n\r\n  }\r\n\r\n  dayClicked({ date, events }: { date: Date, events: CalendarEvent[] }): void {\r\n    if (isSameMonth(date, this.viewDate)) {\r\n      if ((isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) || this.events.length === 0) {\r\n        this.activeDayIsOpen = false;\r\n      } else {\r\n        this.activeDayIsOpen = true;\r\n        this.viewDate = date;\r\n      }\r\n    }\r\n  }\r\n  public getAllSchedules(): void {\r\n    this.schedules = null; //for show spinner each time\r\n    this.scheduleService.getAllSchedules().subscribe((schedule: CalendarEvent[]) => {\r\n      this.tab = []\r\n      \r\n      schedule.forEach((event: any) => {\r\n        if (event.userOwner == this.userId) {\r\n          event.start = new Date(event.start)\r\n          event.actions = this.actions;\r\n          event._id=event._id;\r\n          event.descrip=event.description;\r\n          this.tab.push(event);\r\n\r\n        }\r\n      })\r\n      this.events = this.tab;\r\n    })\r\n  }\r\n  public addSchedule(schedule) {\r\n    this.scheduleService.addSchedule(schedule).subscribe(schedule => {\r\n      this.getAllSchedules()\r\n\r\n    });\r\n  }\r\n  public updateSchedule(schedule) {\r\n    this.scheduleService.updateSchedule(schedule._id, schedule).subscribe(schedule => {\r\n      this.getAllSchedules();\r\n    });\r\n  }\r\n  public deleteSchedule(schedule) {\r\n    this.scheduleService.deleteSchedule(schedule._id).subscribe(schedule => {\r\n      this.getAllSchedules();\r\n    });\r\n  }\r\n\r\n  openScheduleDialog(event) {\r\n    let dialogRef = this.dialog.open(ScheduleDialogComponent, {\r\n      data: event\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      let pati = result\r\n      \r\n        if (!result.isEdit) {\r\n          delete pati._id;\r\n          this.addSchedule(pati)\r\n \r\n        } else {\r\n          this.updateSchedule(result);\r\n        }\r\n\r\n      \r\n    });\r\n  }\r\n\r\n}","export default \"<app-content-header \\r\\n    [title]=\\\"'Schedule'\\\" \\r\\n    [hideBreadcrumb]=\\\"false\\\"\\r\\n    [hasBgImage]=\\\"true\\\" \\r\\n    [class]=\\\"'pb-5 cal-mobile'\\\"></app-content-header>\\r\\n\\r\\n<mat-toolbar color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"px-2 schedule-toolbar\\\">\\r\\n    <div class=\\\"cal-arrows\\\">                \\r\\n        <button mat-icon-button mwlCalendarPreviousView [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\">\\r\\n            <mat-icon *ngIf=\\\"!settings.rtl\\\">chevron_left</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"settings.rtl\\\">chevron_right</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button mwlCalendarToday [(viewDate)]=\\\"viewDate\\\">\\r\\n            <mat-icon>today</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button mwlCalendarNextView [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\">\\r\\n            <mat-icon *ngIf=\\\"settings.rtl\\\">chevron_left</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!settings.rtl\\\">chevron_right</mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n    <h2>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h2>\\r\\n    <div class=\\\"\\\">\\r\\n        <button mat-icon-button (click)=\\\"view = 'month'\\\">\\r\\n            <mat-icon>view_comfy</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button (click)=\\\"view = 'week'\\\">\\r\\n            <mat-icon>view_week</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button (click)=\\\"view = 'day'\\\">\\r\\n            <mat-icon>view_day</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button (click)=\\\"openScheduleDialog(null)\\\">\\r\\n            <mat-icon>add</mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\"> \\r\\n        <mat-card class=\\\"block p-0\\\">  \\r\\n            <div [ngSwitch]=\\\"view\\\">\\r\\n                <mwl-calendar-month-view\\r\\n                    *ngSwitchCase=\\\"'month'\\\"\\r\\n                    [viewDate]=\\\"viewDate\\\"\\r\\n                    [events]=\\\"events\\\"\\r\\n                    [refresh]=\\\"refresh\\\"\\r\\n                    [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\r\\n                    (dayClicked)=\\\"dayClicked($event.day)\\\">\\r\\n                </mwl-calendar-month-view>\\r\\n                <mwl-calendar-week-view\\r\\n                    *ngSwitchCase=\\\"'week'\\\"\\r\\n                    [viewDate]=\\\"viewDate\\\"\\r\\n                    [events]=\\\"events\\\"\\r\\n                    [refresh]=\\\"refresh\\\">\\r\\n                </mwl-calendar-week-view>\\r\\n                <mwl-calendar-day-view\\r\\n                    *ngSwitchCase=\\\"'day'\\\"\\r\\n                    [viewDate]=\\\"viewDate\\\"\\r\\n                    [events]=\\\"events\\\"\\r\\n                    [refresh]=\\\"refresh\\\">\\r\\n                </mwl-calendar-day-view>\\r\\n            </div>\\r\\n\\r\\n       </mat-card>\\r\\n    </div>\\r\\n</div>\";","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\r\nimport jwt_decode from \"../../../../../node_modules/jwt-decode\";\r\n\r\n@Component({\r\n  selector: 'app-schedule-dialog',\r\n  templateUrl: './schedule-dialog.component.html'\r\n})\r\nexport class ScheduleDialogComponent implements OnInit {\r\n  public form:FormGroup;\r\n   token = localStorage.getItem('token');\r\n  decoded = jwt_decode(this.token);\r\n  constructor(public dialogRef: MatDialogRef<ScheduleDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: any,\r\n              ) {\r\n    this.form = new FormGroup({\r\n      _id:new FormControl(''),\r\n      title: new FormControl('', [Validators.required, Validators.minLength(5)]),\r\n      start: new FormControl('', [Validators.required]),\r\n      descrip: new FormControl('', [Validators.required]),\r\n      isEdit : new FormControl(''),\r\n      userOwner: new FormControl(''),\r\n    });\r\n    this.form.patchValue({\r\n     \r\n      'isEdit' : false,\r\n      'userOwner': JSON.parse(JSON.stringify(this.decoded))._id,\r\n    })\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.data){\r\n      this.form.patchValue({\r\n        '_id':this.data._id,\r\n        'title': this.data.title,\r\n        'start': this.data.start,\r\n        'descrip': this.data.descrip,\r\n        'isEdit' : true,\r\n        'userOwner': JSON.parse(JSON.stringify(this.decoded))._id,\r\n      })\r\n    }\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CalendarModule } from 'angular-calendar';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { ScheduleComponent } from './schedule.component';\r\nimport { ScheduleDialogComponent } from './schedule-dialog/schedule-dialog.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: ScheduleComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CalendarModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    ScheduleComponent, \r\n    ScheduleDialogComponent\r\n  ],\r\n  entryComponents: [\r\n    ScheduleDialogComponent\r\n  ]\r\n})\r\nexport class ScheduleModule { }"],"sourceRoot":"webpack:///"}