{"version":3,"sources":["webpack:///src/app/services/canActivateHolidays.guard.ts","webpack:///src/app/pages/form-controls/conge/filtering.component.ts","webpack:///src/app/pages/form-controls/datepicker/datepicker.component.scss","webpack:///src/app/services/activateholiadayslist.ts","webpack:///src/app/pages/form-controls/filtering/filtering.component.html","webpack:///src/app/pages/form-controls/filtering/dialog-overview-example-dialog.html","webpack:///src/app/services/conge.service.ts","webpack:///src/app/pages/form-controls/datepicker/datepicker.component.ts","webpack:///src/app/pages/form-controls/conge/filtering.component.scss","webpack:///src/app/pages/form-controls/conge/filtering.component.html","webpack:///src/app/pages/form-controls/form-controls.module.ts","webpack:///src/app/pages/form-controls/filtering/filtering.component.ts","webpack:///src/app/services/maintenance.service.ts","webpack:///src/app/pages/form-controls/datepicker/datepicker.component.html"],"names":["AuthActivateHolidaysGuard","auth","router","isAllowedHolidays","navigate","providedIn","CongeComponent","appSettings","tablesService","displayedColumns","form","nbreJours","dateDebut","required","dateFin","motif","status","userOwner","settings","userConge","filterValue","data","filter","trim","toLowerCase","token","localStorage","getItem","decoded","JSON","parse","stringify","userId","_id","getAllconges","subscribe","conges","dataSource","sort","data1","data2","createdAt","reverse","userConges","conge","selector","template","activateholiadayslist","isAllowedrequestlist","CongeService","http","congesUrl","basUrl","post","id","get","put","DatepickerComponent","congeService","snackBar","userservice","valid","validated","startDate","Date","minDate","maxDate","myFilter","d","day","getDay","events","holidays","value","viewValue","getUser","res","soldeConge","work","type","event","push","currentDate","thirdDate","time_diff","getTime","days_Diff","thirdDay","setDate","getDate","patchValue","roles","name","addconge","val","message","action","open","duration","ngOnInit","routes","path","redirectTo","pathMatch","canActivate","component","breadcrumb","FormControlsModule","imports","forChild","declarations","FilteringComponent","dialog","loginService","messagesService","username","password","profile","surname","birthday","gender","company","contacts","email","phone","address","social","facebook","twitter","google","registrationDate","joinedDate","bgColor","compare","statut","formconge","user","updateUserConge","reciever","text","sendNotification","updateconge","dialogRef","DialogOverviewExampleDialog","buttonText","ok","cancel","afterClosed","confirmed","confirm","deleteconge","providers","confirmButtonText","cancelButtonText","close","MaintenancesService","MaintenanceUrl"],"mappings":"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","file":"pages-form-controls-form-controls-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {  Router } from '@angular/router';\r\nimport { GuardserviceService } from './guardservice.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthActivateHolidaysGuard {\r\n  constructor(public auth: GuardserviceService, public router: Router) { }\r\n\r\n  canActivate(): boolean {\r\n    if (!this.auth.isAllowedHolidays()) {\r\n      this.router.navigate(['']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  \r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CongeService } from 'src/app/services/conge.service';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\nimport { Element } from '../../tables/tables.service';\r\nimport jwt_decode from \"../../../../../node_modules/jwt-decode\";\r\n\r\n@Component({\r\n  selector: 'app-filtering',\r\n  templateUrl: './filtering.component.html',\r\n  styleUrls: ['./filtering.component.scss'],\r\n\r\n})\r\n\r\nexport class CongeComponent implements OnInit {\r\n  public displayedColumns = ['user', 'requestDate', 'dateDebut', 'dateFin', 'daysNumber', 'motif', 'status'];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  public data: MatTableDataSource<Element>;\r\n  token: string;\r\n  decoded: any;\r\n  userId: any;\r\n  soldeConge: [any];\r\n  userOwner: Object;\r\n  user: any;\r\n  form = new FormGroup({\r\n    nbreJours: new FormControl('',),\r\n    dateDebut: new FormControl('', [Validators.required]),\r\n    dateFin: new FormControl('', [Validators.required]),\r\n    motif: new FormControl('', [Validators.required]),\r\n    status: new FormControl('',),\r\n    userOwner: new FormControl(''),\r\n  });\r\n  userConges: any[];\r\n  congeUser: any;\r\n  constructor(public appSettings: AppSettings, private tablesService: CongeService) {\r\n    this.settings = this.appSettings.settings;\r\n\r\n\r\n  }\r\n  ngOnInit(): void {\r\n\r\n    this.userConge();\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.data.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  userConge() {\r\n    this.token = localStorage.getItem('token');\r\n    this.decoded = JSON.parse(JSON.stringify(jwt_decode(this.token)));\r\n    this.userId = this.decoded._id;\r\n\r\n    this.tablesService.getAllconges().subscribe(conges => {\r\n      this.dataSource = conges;\r\n      this.dataSource = this.dataSource.sort((data1: any, data2: any) => {\r\n        return data2.createdAt - data1.createdAt\r\n      })\r\n      this.dataSource.reverse();\r\n      this.userConges = this.dataSource.filter(conge => conge.userOwner._id === this.userId)\r\n      this.data = new MatTableDataSource<Element>(this.userConges);\r\n    })\r\n  }\r\n\r\n}","export default \".events-list {\\n  height: 97px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcZGF0ZXBpY2tlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7QUFDSiIsImZpbGUiOiJkYXRlcGlja2VyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV2ZW50cy1saXN0e1xyXG4gICAgaGVpZ2h0OiA5N3B4O1xyXG59Il19 */\";","import { Injectable } from '@angular/core';\r\nimport {  Router } from '@angular/router';\r\nimport { GuardserviceService } from './guardservice.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class activateholiadayslist {\r\n  constructor(public auth: GuardserviceService, public router: Router) { }\r\n\r\n  canActivate(): boolean {\r\n    if (!this.auth.isAllowedrequestlist()) {\r\n      this.router.navigate(['']);\r\n      \r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  \r\n}","export default \"<app-content-header \\r\\n    [icon]=\\\"'format_line_spacing'\\\" \\r\\n    [title]=\\\"'Holidays list'\\\" \\r\\n    [hideBreadcrumb]=\\\"false\\\"\\r\\n    [hasBgImage]=\\\"true\\\" \\r\\n    [class]=\\\"'pb-4'\\\"></app-content-header>\\r\\n\\r\\n<div fxLayout=\\\"column\\\" class=\\\"p-2\\\">\\r\\n    <div class=\\\"p-2\\\"> \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\"> \\r\\n            <mat-form-field class=\\\"px-3 py-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"search...\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n        <mat-table #table [dataSource]=\\\"data\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n            <ng-container matColumnDef=\\\"user\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> User Name </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.userOwner.profile.name}} {{element.userOwner.profile.surname}} </mat-cell>\\r\\n            </ng-container>         \\r\\n            <ng-container matColumnDef=\\\"requestDate\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Request Date </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.createdAt | date: 'dd/MM/yyyy'}} </mat-cell>\\r\\n            </ng-container>     \\r\\n            <ng-container matColumnDef=\\\"dateDebut\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Start day </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.dateDebut | date: 'dd/MM/yyyy'}} </mat-cell>\\r\\n            </ng-container>        \\r\\n            <ng-container matColumnDef=\\\"dateFin\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> End date </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.dateFin  | date: 'dd/MM/yyyy'}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"daysNumber\\\">\\r\\n                <mat-header-cell *matHeaderCellDef>days number</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.nbreJours}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"motif\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Vacation reason </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.motif}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"status\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> checked by / status </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    {{element.status}} \\r\\n                    <!-- <button mat-mini-fab  color=\\\"\\\" class=\\\"m-1 \\\">  \\r\\n                        <span class=\\\"material-icons\\\">\\r\\n                            schedule\\r\\n                            </span>\\r\\n                    </button>\\r\\n                    <button mat-mini-fab  color=\\\"\\\" class=\\\"m-1 \\\" >\\r\\n                        <span class=\\\"material-icons\\\">\\r\\n                            done_all\\r\\n                            </span>\\r\\n                    </button>\\r\\n                    <button mat-mini-fab  color=\\\"\\\" class=\\\"m-1 \\\">\\r\\n                        <span class=\\\"material-icons\\\">\\r\\n                            cancel_presentation\\r\\n                            </span>\\r\\n                    </button> -->\\r\\n                </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"respond\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Action</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <button mat-mini-fab  color=\\\"primary\\\" class=\\\"m-1 \\\" (click) = \\\"confirmRequest(element)\\\"  *ngIf = \\\"(element.status !='validated') &&( element.status != 'annulée')\\\">\\r\\n                        <span class=\\\"material-icons\\\">\\r\\n                            offline_pin\\r\\n                            </span>\\r\\n                    </button>\\r\\n                    <button mat-mini-fab  color=\\\"warn\\\" class=\\\"m-1 \\\" (click) = \\\"cancelRequest(element)\\\" *ngIf = \\\"element.status != 'validated' && element.status != 'annulée'\\\">\\r\\n                        <span class=\\\"material-icons\\\">\\r\\n                            cancel_presentation\\r\\n                            </span>\\r\\n                    </button>\\r\\n                    <button mat-mini-fab  color=\\\"warn\\\" class=\\\"m-1 \\\" (click) = \\\"openDialog(element)\\\">\\r\\n                        <span class=\\\"material-icons\\\">\\r\\n                            delete_sweep\\r\\n                            </span>\\r\\n                    </button>\\r\\n                </mat-cell>\\r\\n            </ng-container>\\r\\n \\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>        \\r\\n    </div>\\r\\n</div>\";","export default \"<h1 mat-dialog-title>Delete request</h1>\\r\\n<div mat-dialog-content  class=\\\"w-100\\\">\\r\\n  <p>decline request ?</p>\\r\\n</div>\\r\\n<div mat-dialog-actions  class=\\\"w-100\\\">\\r\\n  <button mat-button tabindex=\\\"1\\\" (click)=\\\"onConfirmClick()\\\">{{confirmButtonText}}</button>\\r\\n  <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">{{cancelButtonText}}</button>\\r\\n</div>\";","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CongeService {\r\n\r\n  congesUrl: string = environment.basUrl;\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  addconge(data) {\r\n    return this.http.post(this.congesUrl + \"conges/conge/add/\", data );\r\n  }\r\n  getconge(id) {\r\n    return this.http.get(this.congesUrl + \"conges/conge/\" + id,);\r\n  }\r\n  updateconge(id, data) {\r\n    return this.http.put(this.congesUrl + \"conges/conge/update/\"+ id, data, );\r\n  }\r\n  deleteconge(id) {\r\n    return this.http.delete(this.congesUrl + \"conges/conge/delete/\" + id, );\r\n  }\r\n  getAllconges() {\r\n    return this.http.get(this.congesUrl + \"conges/getAllconges\");\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\nimport jwt_decode from \"../../../../../node_modules/jwt-decode\";\r\nimport { CongeService } from 'src/app/services/conge.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { UsersService } from 'src/app/services/users.service';\r\n\r\n@Component({\r\n  selector: 'app-datepicker',\r\n  templateUrl: './datepicker.component.html',\r\n  styleUrls: ['./datepicker.component.scss']\r\n})\r\nexport class DatepickerComponent implements OnInit {\r\n  public settings: Settings;\r\n  form = new FormGroup({\r\n    nbreJours: new FormControl('',),\r\n    dateDebut: new FormControl('', [Validators.required]),\r\n    dateFin: new FormControl('', [Validators.required]),\r\n    motif: new FormControl('', [Validators.required]),\r\n    status: new FormControl('',),\r\n    userOwner: new FormControl(''),\r\n  });\r\n  valid = true;\r\n  validated = false;\r\n  decoded: any;\r\n  userId: any;\r\n  soldeConge: any;\r\n  token: string;\r\n  constructor(public appSettings: AppSettings, public congeService: CongeService, public snackBar: MatSnackBar, public userservice:UsersService) {\r\n    this.settings = this.appSettings.settings;\r\n  }\r\n  ngOnInit() {\r\n\r\n    this.token = localStorage.getItem('token');\r\n    this.decoded = jwt_decode(this.token);\r\n    this.userId = this.decoded._id;\r\n    this.userservice.getUser(this.userId).subscribe((res: any) => {\r\n      this.soldeConge = JSON.parse(JSON.stringify(res.work.soldeConge));\r\n    }\r\n    );\r\n    \r\n    this.form = new FormGroup({\r\n      nbreJours: new FormControl('',),\r\n      dateDebut: new FormControl('', [Validators.required]),\r\n      dateFin: new FormControl('', [Validators.required]),\r\n      motif: new FormControl('', [Validators.required]),\r\n      status: new FormControl('',),\r\n      userOwner: new FormControl(''),\r\n    });\r\n  }\r\n  //Datepicker start date\r\n  startDate = new Date(1990, 0, 1);\r\n\r\n  //Datepicker with min & max validation\r\n  minDate = new Date(2010, 0, 1);\r\n  maxDate = new Date(2020, 0, 1);\r\n\r\n  //Datepicker with filter validation\r\n  myFilter = (d: Date): boolean => {\r\n    const day = d.getDay();\r\n    return day !== 0 && day !== 6;\r\n  }\r\n\r\n  //Datepicker input and change events\r\n  events: string[] = [];\r\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\r\n    this.events.push(`${type}: ${event.value}`);\r\n  }\r\n\r\n  // select\r\n  selectedValue: string;\r\n  holidays = [\r\n    { value: 'Public holiday', viewValue: 'Public holidays' },\r\n    { value: 'Vacation days', viewValue: 'Vacation days' },\r\n    { value: 'Sick days', viewValue: 'Sick days' },\r\n    { value: 'Maternity', viewValue: 'Maternity' }\r\n  ];\r\n\r\n\r\n  //submit holidays request\r\n  onFormSubmit() {\r\n    let currentDate = new Date();\r\n    let dateDebut = new Date(this.form.value.dateDebut);\r\n    let dateFin = new Date(this.form.value.dateFin);\r\n    let thirdDate = new Date();\r\n    // différence des heures\r\n    var time_diff = dateFin.getTime() - dateDebut.getTime();\r\n    // différence de jours\r\n    var days_Diff = time_diff / (1000 * 3600 * 24);\r\n    let thirdDay = new Date(thirdDate.setDate(currentDate.getDate() + 2));\r\n\r\n    if ((currentDate < dateDebut)\r\n      && (dateDebut <= dateFin)\r\n      && (thirdDay < dateDebut)\r\n      && (this.soldeConge != 0)\r\n      && (days_Diff <= this.soldeConge)) {\r\n        this.validated = false;\r\n\r\n      this.form.patchValue({\r\n        nbreJours: days_Diff + 1,\r\n        dateDebut: dateDebut,\r\n        dateFin: dateFin,\r\n        userOwner: JSON.parse(JSON.stringify(this.decoded))._id,\r\n        status: JSON.parse(JSON.stringify(this.decoded)).roles[0].name,\r\n      });\r\n      this.congeService.addconge(this.form.value).subscribe(\r\n        (val) => {\r\n          let message = \"your request has been sent successfully\";\r\n          let action = \"close\"\r\n          this.snackBar.open(message, action, {\r\n            duration: 2000,\r\n          });\r\n          this.ngOnInit()\r\n        });\r\n    } else {\r\n      this.validated = true;\r\n      let message = \"please be sure that the end and start date are correct \";\r\n      let action = \"close\"\r\n      this.snackBar.open(message, action, {\r\n        duration: 2000,\r\n      });\r\n    }\r\n\r\n  }\r\n}\r\n","export default \"#canceled {\\n  background: #f05858;\\n}\\n\\n#validated {\\n  background: #30eb59;\\n}\\n\\n#pending {\\n  background: #d8a64a;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcZmlsdGVyaW5nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQVcsbUJBQUE7QUFFWDs7QUFEQTtFQUFZLG1CQUFBO0FBS1o7O0FBSkE7RUFBVSxtQkFBQTtBQVFWIiwiZmlsZSI6ImZpbHRlcmluZy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNjYW5jZWxlZHsgYmFja2dyb3VuZDogcmdiKDI0MCwgODgsIDg4KTsgfVxyXG4jdmFsaWRhdGVkeyBiYWNrZ3JvdW5kOiByZ2IoNDgsIDIzNSwgODkpOyB9XHJcbiNwZW5kaW5neyBiYWNrZ3JvdW5kOiByZ2IoMjE2LCAxNjYsIDc0KTsgfSJdfQ== */\";","export default \"<app-content-header \\r\\n    [icon]=\\\"'format_line_spacing'\\\" \\r\\n    [title]=\\\"'Holidays'\\\" \\r\\n    [hideBreadcrumb]=\\\"false\\\"\\r\\n    [hasBgImage]=\\\"true\\\" \\r\\n    [class]=\\\"'pb-4'\\\"></app-content-header>\\r\\n\\r\\n<div fxLayout=\\\"column\\\" class=\\\"p-2\\\">\\r\\n    <div class=\\\"p-2\\\"> \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\">           \\r\\n            <mat-form-field class=\\\"px-3 py-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Type to filter all columns\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n        <mat-table #table [dataSource]=\\\"data\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n            <ng-container matColumnDef=\\\"user\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> User Name </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.userOwner.profile.name}} {{element.userOwner.profile.surname}} </mat-cell>\\r\\n            </ng-container>         \\r\\n            <ng-container matColumnDef=\\\"requestDate\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Request Date </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.createdAt | date: 'dd/MM/yyyy'}} </mat-cell>\\r\\n            </ng-container>     \\r\\n            <ng-container matColumnDef=\\\"dateDebut\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Start day </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.dateDebut | date: 'dd/MM/yyyy'}} </mat-cell>\\r\\n            </ng-container>        \\r\\n            <ng-container matColumnDef=\\\"dateFin\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> End date </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.dateFin  | date: 'dd/MM/yyyy'}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"daysNumber\\\">\\r\\n                <mat-header-cell *matHeaderCellDef>Days number</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.nbreJours}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"motif\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Vacation reason </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.motif}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"status\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <!-- {{element.status}}  -->\\r\\n                    <button mat-mini-fab  class=\\\"m-1 \\\" id=\\\"pending\\\" *ngIf = \\\"(element.status !== 'validated')  &&(element.status !== 'annulée') \\\">\\r\\n                        <span class=\\\"material-icons\\\"  >\\r\\n                            schedule\\r\\n                            </span>\\r\\n                    </button>\\r\\n                      <button mat-mini-fab  class=\\\"m-1 \\\" id=\\\"validated\\\" *ngIf = \\\"element.status === 'validated'\\\">\\r\\n                        <span class=\\\"material-icons\\\">\\r\\n                            done_all\\r\\n                            </span>\\r\\n                      </button>\\r\\n                   <button mat-mini-fab  class=\\\"m-1 \\\" id=\\\"canceled\\\" *ngIf = \\\"element.status === 'annulée'\\\">\\r\\n                    <span class=\\\"material-icons\\\">\\r\\n                        cancel_presentation\\r\\n                        </span>\\r\\n                   </button>\\r\\n                       \\r\\n                </mat-cell>\\r\\n            </ng-container>      \\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table> \\r\\n        </div>\\r\\n</div>\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { DatepickerComponent } from './datepicker/datepicker.component';\r\nimport { FormFieldComponent } from './form-field/form-field.component';\r\nimport { FilteringComponent } from './filtering/filtering.component';\r\nimport { SmsSendComponent } from \"./SmsSend/sms-send.component\";\r\nimport { CongeComponent } from './conge/filtering.component';\r\nimport { MatTableModule } from '@angular/material/table' \r\nimport { activateholiadayslist } from \"src/app/services/activateholiadayslist\";\r\n\r\nimport { AuthActivateHolidaysGuard } from 'src/app/services/canActivateHolidays.guard';\r\n\r\nexport const routes = [\r\n  { path: '', redirectTo: 'datepicker', pathMatch: 'full'},\r\n  { path: 'datepicker', canActivate:[AuthActivateHolidaysGuard], component: DatepickerComponent, data: { breadcrumb: 'Datepicker' } },\r\n  { path: 'Holidays-list',canActivate:[AuthActivateHolidaysGuard] , component: CongeComponent, data: { breadcrumb: 'Holidays list' } },\r\n  { path: 'holidays-requests-list',canActivate:[activateholiadayslist], component: FilteringComponent, data: { breadcrumb: 'holidays requests list' } },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PerfectScrollbarModule,\r\n    SharedModule,\r\n    MatTableModule\r\n  ],\r\n  declarations: [\r\n    DatepickerComponent, \r\n    FormFieldComponent, \r\n    FilteringComponent,\r\n    SmsSendComponent,\r\n    CongeComponent\r\n  ]\r\n})\r\nexport class FormControlsModule { }","import { Component, Inject } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\nimport { CongeService } from 'src/app/services/conge.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport jwt_decode from \"../../../../../node_modules/jwt-decode\";\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MessagesService } from 'src/app/theme/components/messages/messages.service';\r\n\r\n@Component({\r\n  selector: 'app-filtering',\r\n  templateUrl: './filtering.component.html',\r\n  providers: [MessagesService]\r\n\r\n})\r\nexport class FilteringComponent {\r\n  public displayedColumns = ['user', 'requestDate', 'dateDebut', 'dateFin', 'daysNumber', 'motif', 'status', 'respond'];\r\n  public dataSource: any;\r\n  public data: MatTableDataSource<Element>;\r\n  public settings: Settings;\r\n  token: string;\r\n  decoded: any;\r\n  userId: any;\r\n  form = new FormGroup({\r\n    _id: new FormControl(''),\r\n    username: new FormControl('',),\r\n    password: new FormControl('',),\r\n    profile: new FormGroup({\r\n      name: new FormControl(''),\r\n      surname: new FormControl(''),\r\n      birthday: new FormControl(''),\r\n      gender: new FormControl(''),\r\n    }),\r\n    work: new FormGroup({\r\n      company: new FormControl(''),\r\n      roles: new FormControl([]),\r\n      soldeConge: new FormControl('')\r\n    }),\r\n    contacts: new FormGroup({\r\n      email: new FormControl('',),\r\n      phone: new FormControl(''),\r\n      address: new FormControl(''),\r\n    }),\r\n    social: new FormGroup({\r\n      facebook: new FormControl(''),\r\n      twitter: new FormControl(''),\r\n      google: new FormControl('')\r\n    }),\r\n    settings: new FormGroup({\r\n      registrationDate: new FormControl(''),\r\n      joinedDate: new FormControl(''),\r\n      bgColor: new FormControl(''),\r\n    })\r\n  });\r\n  soldeConge: any;\r\n  userOwner: Object;\r\n  user: any;\r\n  compare: any;\r\n  userConges: any;\r\n\r\n  constructor(public appSettings: AppSettings,\r\n    private tablesService: CongeService,\r\n    public snackBar: MatSnackBar,\r\n    public dialog: MatDialog,\r\n    public loginService: LoginService,\r\n    public messagesService : MessagesService) {  }\r\n    ngOnInit() {\r\n      this.token = localStorage.getItem('token');\r\n      this.decoded = JSON.parse(JSON.stringify(jwt_decode(this.token)));\r\n      this.compare = this.decoded.roles[0].name;\r\n    this.settings = this.appSettings.settings;\r\n\r\n    this.tablesService.getAllconges().subscribe(res => {\r\n      this.dataSource = res;\r\n      this.dataSource = this.dataSource.sort((data1: any, data2: any) => {\r\n        return data2.createdAt - data1.createdAt\r\n      })\r\n     \r\n       this.dataSource.reverse();\r\n       switch (this.compare) {\r\n         case \"surveillant Générale\":\r\n          this.userConges = this.dataSource.filter(conge => conge.status === \"infirmiers et aide\" \r\n          || conge.status === \"surveillant Maternité\"\r\n          || conge.status === \"surveillant Bloc\"\r\n          || conge.status === \"surveillant Anesthésie\"\r\n          || conge.status === \"surveillant chirurgie\"\r\n          || conge.status === \"anesthesistes\");\r\n           break;\r\n           case\"responsable facturation\":\r\n           this.userConges = this.dataSource.filter(conge => conge.status=== \"acceuil+cassiers+facturations\"\r\n           || conge.status === \"cassiers principale\")\r\n           break;\r\n           case\"respon-maintenance\":\r\n           this.userConges = this.dataSource.filter(conge => conge.status=== \"team-matenaince\")\r\n           break;\r\n           case\"hyginiste\":\r\n           this.userConges = this.dataSource.filter(conge => conge.status=== \"cuisine\")\r\n           break;\r\n           case\"Respnsable Pharmacie\":\r\n           this.userConges = this.dataSource.filter(conge => conge.status=== \"pharmaciens\"\r\n           || conge.status === \"cassiers principale\")\r\n           break;\r\n           case\"gouvernantes\":\r\n           this.userConges = this.dataSource.filter(conge => conge.status=== \"ouvriers\")\r\n           break;\r\n           case\"respon-financier\":\r\n           this.userConges = this.dataSource.filter(conge => conge.status=== \"comptable\")\r\n           break;\r\n           case\"gouvernantes\":\r\n           this.userConges = this.dataSource.filter(conge => conge.status=== \"ouvriers\")\r\n           break;\r\n          case\"gouvernantes\":\r\n           this.userConges = this.dataSource.filter(conge => conge.status=== \"ouvriers\")\r\n           break; \r\n           case\"Pdg\":\r\n           this.userConges = this.dataSource.filter(conge => conge.status === \"econome\" \r\n           || conge.status === \"respon-financier\"\r\n           || conge.status === \"gouvernantes\"\r\n           || conge.status === \"Respnsable Pharmacie\"\r\n           || conge.status === \"hyginiste\"\r\n           || conge.status === \"respon-maintenance\"\r\n           || conge.status === \"responsable facturation\"\r\n           || conge.status === \"responsable-RH\"\r\n           || conge.status === \"secritaire personnelle\"\r\n           || conge.status === \"secritaire générale\"\r\n           || conge.status === \"surveillant Générale\"\r\n           || conge.status === \"Responsable-info\"\r\n           || conge.status === \"directeur-technique\");\r\n           break;\r\n           case\"directeur-technique\":\r\n           this.userConges = this.dataSource.filter(conge => conge.status=== \"surveillant Générale1\")\r\n           break;\r\n           case\"responsable-RH\":\r\n           this.userConges = this.dataSource.filter(conge => conge.status === \"directeur-technique1\" \r\n           || conge.status === \"gouvernantes1\"\r\n           || conge.status === \"Respnsable Pharmacie1\"\r\n           || conge.status === \"hyginiste1\"\r\n           || conge.status === \"respon-maintenance1\"\r\n           || conge.status === \"responsable facturation1\"\r\n           || conge.status === \"Pdg1\"\r\n           || conge.status === \"respon-financier1\"\r\n           || conge.status === \"responsable-RH1\"\r\n           || conge.status === \"validated\"\r\n          );\r\n           break;\r\n           \r\n         default:\r\n          this.userConges = this.dataSource\r\n       }\r\n      this.data = new MatTableDataSource<Element>(this.userConges)\r\n    })\r\n  }\r\n  // this.userConges = this.dataSource.filter(conge => conge.userOwner._id === this.userId)\r\n  applyFilter(filterValue: string) {\r\n    this.data.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  //approve request\r\n  confirmRequest(conge) {\r\n\r\n    switch (conge.status) {\r\n      case \"infirmiers et aide\": case \"surveillant Maternité\": case \"surveillant Bloc\":\r\n      case \"surveillant Anesthésie\": case \"surveillant chirurgie\": case \"anesthesistes\":\r\n        var statut = \"surveillant Générale1\";\r\n        var formconge = ({\r\n          status: JSON.parse(JSON.stringify(statut)),\r\n        });\r\n        break;\r\n      case \"acceuil+cassiers+facturations\": \r\n        var statut = \"responsable facturation1\";\r\n        var formconge = ({\r\n          status: JSON.parse(JSON.stringify(statut)),\r\n        });\r\n        break;\r\n      case \"team-matenaince\":\r\n        var statut = \"respon-maintenance1\";\r\n        var formconge = ({\r\n          status: JSON.parse(JSON.stringify(statut)),\r\n        });\r\n        break;\r\n\r\n      case \"cuisine\":\r\n        var statut = \"hyginiste1\";\r\n        var formconge = ({\r\n          status: JSON.parse(JSON.stringify(statut)),\r\n        });\r\n        break;\r\n      case \"pharmaciens\":\r\n        var statut = \"Respnsable Pharmacie1\";\r\n        var formconge = ({\r\n          status: JSON.parse(JSON.stringify(statut)),\r\n        });\r\n        break;\r\n      case \"ouvriers\":\r\n        var statut = \"gouvernantes1\";\r\n        var formconge = ({\r\n          status: JSON.parse(JSON.stringify(statut)),\r\n        });\r\n        break;\r\n      case \"comptable\":\r\n        var statut = \"respon-financier1\";\r\n        var formconge = ({\r\n          status: JSON.parse(JSON.stringify(statut)),\r\n        });\r\n        break;\r\n      case \"econome\": case \"respon-financier\": case \"gouvernantes\": case \"Respnsable Pharmacie\": case \"hyginiste\":\r\n      case \"respon-maintenance\": case \"responsable facturation\": case \"responsable-RH\":\r\n      case \"secritaire personnelle\": case \"secritaire générale\": case \"surveillant Générale\": case \"Responsable-info\":\r\n      case \"directeur-technique\":\r\n        var statut = \"Pdg1\";\r\n        var formconge = ({\r\n          status: JSON.parse(JSON.stringify(statut)),\r\n        });\r\n        break;\r\n      case \"directeur-technique1\": case \"gouvernantes1\": case \"Respnsable Pharmacie1\": case \"hyginiste1\":\r\n      case \"respon-maintenance1\": case \"responsable facturation1\": case \"Pdg1\": case \"respon-financier1\":\r\n       case \"admin\":\r\n        var statut = \"responsable-RH1\";\r\n        var formconge = ({\r\n          status: JSON.parse(JSON.stringify(statut)),\r\n        });\r\n        break;\r\n      case \"surveillant Générale1\":\r\n        var statut = \"directeur-technique1\";\r\n        var formconge = ({\r\n          status: JSON.parse(JSON.stringify(statut)),\r\n        });\r\n        break;\r\n      case \"responsable-RH1\":\r\n        var statut = \"validated\";\r\n        var formconge = ({\r\n          status: JSON.parse(JSON.stringify(statut)),\r\n        });\r\n        this.token = localStorage.getItem('token');\r\n        this.decoded = JSON.parse(JSON.stringify(jwt_decode(this.token)));\r\n        this.userId = this.decoded._id;\r\n        this.soldeConge = this.decoded.soldeConge;\r\n        this.loginService.getUser(this.userId).subscribe(user => {\r\n          this.user = user;\r\n          this.form.patchValue(this.user);\r\n          this.form.patchValue({\r\n            work: {\r\n              soldeConge: (this.soldeConge - (conge.nbreJours))\r\n            }\r\n          })\r\n          this.loginService.updateUserConge(this.userId, this.form.value).subscribe(res => {\r\n          })\r\n        })\r\n        let message = {\r\n          reciever: conge.userOwner._id,\r\n          text: \"your vacation leaves has been approved\",\r\n          userOwner: this.userId,\r\n          conge: true\r\n        }\r\n        this.messagesService.sendNotification(message).subscribe();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.tablesService.updateconge(conge._id, formconge).subscribe(conge => {\r\n      this.ngOnInit() ;\r\n      let message = \"holidays request approved\";\r\n      let action = \"close\"\r\n      this.snackBar.open(message, action, {\r\n        duration: 2000,\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  cancelRequest(conge) {\r\n    var statut = \"annulée\";\r\n    var formconge = ({\r\n\r\n      status: JSON.parse(JSON.stringify(statut)),\r\n\r\n    });\r\n    this.tablesService.updateconge(conge._id, formconge).subscribe(conge => {\r\n      this.ngOnInit() ;\r\n      let message = \"holidays request canceled\";\r\n      let action = \"close\"\r\n      this.snackBar.open(message, action, {\r\n        duration: 2000,\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n\r\n  //refuse request\r\n  openDialog(conge): void {\r\n    let dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      data: {\r\n        message: 'Are you sure want to delete ?',\r\n        buttonText: {\r\n          ok: 'Save',\r\n          cancel: 'No'\r\n        }\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n      let confirm = confirmed;\r\n\r\n      if (confirm) {\r\n        //change status depending on the role\r\n        this.tablesService.deleteconge(conge._id).subscribe(conge => {\r\n          this.ngOnInit() ;\r\n          let message = \"request deleted\";\r\n          let action = \"close\"\r\n          this.snackBar.open(message, action, {\r\n            duration: 2000,\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-overview-example-dialog',\r\n  templateUrl: 'dialog-overview-example-dialog.html',\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n  conges;\r\n  message: string = \"Are you sure?\"\r\n  confirmButtonText = \"Yes\"\r\n  cancelButtonText = \"Cancel\"\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  onConfirmClick(): void {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MaintenancesService {\r\n \r\n  constructor(private http: HttpClient) {\r\n   \r\n  }\r\n \r\n  MaintenanceUrl: string = environment.basUrl;\r\n \r\n  addMaintenance(data) {\r\n    return this.http.post(this.MaintenanceUrl + \"maintenances/maintenance/add\", data );\r\n  }\r\n  getMaintenance(id) {\r\n    return this.http.get(this.MaintenanceUrl + \"maintenances/maintenance\" + id,);\r\n  }\r\n  updateMaintenance(id, data) {\r\n    return this.http.put(this.MaintenanceUrl + \"maintenances/maintenance/update/\"+ id, data, );\r\n  }\r\n  deleteMaintenance(id) {\r\n    return this.http.delete(this.MaintenanceUrl + \"maintenances/maintenance/delete/\" + id, );\r\n  }\r\n  getAllMaintenances() {\r\n    return this.http.get(this.MaintenanceUrl + \"maintenances/getAllmaintenances\",  );\r\n  }\r\n}\r\n","export default \"<app-content-header [icon]=\\\"'today'\\\" [title]=\\\"'Holidays request'\\\" [hideBreadcrumb]=\\\"false\\\" [hasBgImage]=\\\"true\\\"\\r\\n    [class]=\\\"'pb-4'\\\"></app-content-header>\\r\\n\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row wrap\\\" class=\\\"p-2\\\">\\r\\n\\r\\n        <div fxFlex=\\\"50\\\" class=\\\"p-2\\\">\\r\\n            <mat-card>\\r\\n                <mat-card-header fxLayoutAlign=\\\"center\\\">\\r\\n                    <mat-card-subtitle>\\r\\n                        <h2> Start date </h2>\\r\\n                    </mat-card-subtitle>\\r\\n                </mat-card-header>\\r\\n                <mat-card-content fxLayoutAlign=\\\"center\\\">\\r\\n                    <div>\\r\\n                        <mat-form-field>\\r\\n                            <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Choose a date\\\"\\r\\n                                formControlName=\\\"dateDebut\\\">\\r\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                            <mat-datepicker #picker1></mat-datepicker>\\r\\n                            <mat-error *ngIf=\\\"form.controls.dateDebut.errors?.required\\\"> Start date is required\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                        <mat-error *ngIf=\\\"validated\\\"> please verify the dates </mat-error>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <!-- <div style=\\\"display: none;\\\"  id =\\\"validated\\\" >\\r\\n                        <mat-error  *ngIf=\\\"validated\\\"> should be before the end date</mat-error>\\r\\n                    </div> -->\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"50\\\" class=\\\"p-2\\\">\\r\\n            <mat-card>\\r\\n                <mat-card-header fxLayoutAlign=\\\"center\\\">\\r\\n                    <mat-card-subtitle>\\r\\n                        <h2>End date</h2>\\r\\n                    </mat-card-subtitle>\\r\\n                </mat-card-header>\\r\\n                <mat-card-content fxLayoutAlign=\\\"center\\\">\\r\\n                  <div>\\r\\n                    <mat-form-field>\\r\\n                        <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Choose a date\\\" formControlName=\\\"dateFin\\\">\\r\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                        <mat-datepicker #picker2></mat-datepicker>\\r\\n                        <mat-error *ngIf=\\\"form.controls.dateFin.errors?.required\\\"> End date is required</mat-error>\\r\\n                    </mat-form-field>\\r\\n                    <mat-error *ngIf=\\\"validated\\\">please verify the dates</mat-error>\\r\\n                  </div>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"50\\\" class=\\\"p-2\\\">\\r\\n            <mat-card>\\r\\n                <mat-card-header>\\r\\n                    <mat-card-subtitle>\\r\\n                        <h2>select your reason for absence</h2>\\r\\n                    </mat-card-subtitle>\\r\\n                </mat-card-header>\\r\\n                <mat-card-content>\\r\\n                    <mat-form-field class=\\\"mx-2\\\">\\r\\n                        <input matInput placeholder=\\\"e.g : vacation days\\\" formControlName=\\\"motif\\\">\\r\\n\\r\\n                        <!-- <mat-select placeholder=\\\"e.g : Holidays\\\" formControlName=\\\"motif\\\">\\r\\n                            <mat-option *ngFor=\\\"let holiday of holidays\\\" [value]=\\\"holiday.value\\\">\\r\\n                                {{holiday.viewValue}}\\r\\n                            </mat-option>\\r\\n                        </mat-select> -->\\r\\n                        <mat-error *ngIf=\\\"form.controls.motif.errors?.required\\\"> holidays reason is required</mat-error>\\r\\n                    </mat-form-field>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"50\\\" class=\\\"p-2\\\">\\r\\n            <mat-card>\\r\\n                <mat-card-header fxLayoutAlign=\\\"center\\\">\\r\\n                    <mat-card-subtitle>\\r\\n                        <h2></h2>\\r\\n                    </mat-card-subtitle>\\r\\n                </mat-card-header>\\r\\n                <mat-card-content fxLayoutAlign=\\\" center center\\\">\\r\\n                    <div>\\r\\n                        <mat-card-subtitle>\\r\\n                            <h2>for your information :</h2>\\r\\n                        </mat-card-subtitle>\\r\\n                        <p>your leave balance is : {{soldeConge}} </p>\\r\\n                        <p>to send vacation request : start date should be after 3 days from now </p>\\r\\n                    </div>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</form>\\r\\n<div fxLayoutAlign=\\\"center\\\" >\\r\\n    <button mat-flat-button color=\\\"warn\\\" class=\\\"m-1 \\\" (click)=\\\"onFormSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid\\\">send your request</button>\\r\\n</div>\\r\\n\\r\\n\";"]}