{"version":3,"sources":["webpack:///src/app/pages/schedule/schedule-dialog/schedule-dialog.component.html","webpack:///src/app/services/schedule.service.ts","webpack:///src/app/pages/schedule/schedule.component.scss","webpack:///src/app/pages/schedule/schedule.component.ts","webpack:///src/app/pages/schedule/schedule.component.html","webpack:///src/app/pages/schedule/schedule-dialog/schedule-dialog.component.ts","webpack:///src/app/pages/schedule/schedule.module.ts"],"names":["SchedulesService","http","ScheduleUrl","basUrl","data","post","id","get","put","providedIn","colors","red","primary","secondary","blue","yellow","ScheduleComponent","appSettings","dialog","snackBar","scheduleService","view","viewDate","Date","activeDayIsOpen","actions","label","onClick","event","openScheduleDialog","events","filter","iEvent","deleteSchedule","open","duration","refresh","token","localStorage","getItem","decoded","userId","JSON","parse","stringify","_id","tab","settings","getAllSchedules","date","length","schedules","subscribe","schedule","forEach","userOwner","start","descrip","description","push","addSchedule","updateSchedule","dialogRef","afterClosed","result","pati","isEdit","selector","template","animations","encapsulation","None","host","ScheduleDialogComponent","form","title","required","minLength","patchValue","close","routes","path","component","pathMatch","ScheduleModule","imports","forChild","declarations","entryComponents"],"mappings":"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","file":"pages-schedule-schedule-module-es5.js","sourcesContent":["export default \"<h1 mat-dialog-title><span *ngIf=\\\"!form.controls.isEdit.value\\\">Add</span><span\\r\\n    *ngIf=\\\"form.controls.isEdit.value\\\">Edit</span> event</h1>\\r\\n<div mat-dialog-content>\\r\\n  <form [formGroup]=\\\"form\\\">\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n      <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n      <input matInput [matDatepicker]=\\\"start\\\" placeholder=\\\"Start Date\\\" formControlName=\\\"start\\\">\\r\\n      <mat-datepicker-toggle matSuffix [for]=\\\"start\\\"></mat-datepicker-toggle>\\r\\n      <mat-datepicker #start></mat-datepicker>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n\\r\\n      <textarea matInput placeholder=\\\"description\\\" formControlName=\\\"descrip\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n\\r\\n\\r\\n  </form>\\r\\n</div>\\r\\n<div mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n  <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"form.value\\\" [disabled]=\\\"!form.valid\\\"><span\\r\\n      *ngIf=\\\"!form.controls.isEdit.value\\\">Save</span><span *ngIf=\\\"form.controls.isEdit.value\\\">Update</span></button>\\r\\n  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"close()\\\">Cancel</button>\\r\\n</div>\";","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SchedulesService {\r\n \r\n  constructor(private http: HttpClient) {\r\n   \r\n  }\r\n \r\n  ScheduleUrl: string = environment.basUrl;\r\n \r\n  addSchedule(data) {\r\n    return this.http.post(this.ScheduleUrl + \"rendezvous/rendezVous/add\", data );\r\n  }\r\n  getSchedule(id) {\r\n    return this.http.get(this.ScheduleUrl + \"rendezvous/rendezVous\" + id,);\r\n  }\r\n  updateSchedule(id, data) {\r\n    return this.http.put(this.ScheduleUrl + \"rendezvous/rendezVous/update/\"+ id, data, );\r\n  }\r\n  deleteSchedule(id) {\r\n    return this.http.delete(this.ScheduleUrl + \"rendezvous/rendezVous/delete/\" + id, );\r\n  }\r\n  getAllSchedules() {\r\n    return this.http.get(this.ScheduleUrl + \"rendezvous/getAllRendezVous\",  );\r\n  }\r\n}\r\n","export default \".schedule-toolbar {\\n  background: transparent !important;\\n  height: 40px;\\n  margin-top: -40px;\\n}\\n\\n.cal-arrows {\\n  width: 160px;\\n}\\n\\n@media screen and (max-width: 600px) {\\n  .schedule-toolbar {\\n    background: transparent !important;\\n    height: 112px;\\n    margin-top: -112px;\\n  }\\n\\n  .cal-mobile {\\n    padding-bottom: 112px !important;\\n  }\\n\\n  .cal-arrows {\\n    width: auto;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxzY2hlZHVsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtDQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0FBQ0o7O0FBQ0E7RUFDSSxZQUFBO0FBRUo7O0FBQ0E7RUFDSTtJQUNJLGtDQUFBO0lBQ0EsYUFBQTtJQUNBLGtCQUFBO0VBRU47O0VBQUU7SUFDSSxnQ0FBQTtFQUdOOztFQURFO0lBQ0ksV0FBQTtFQUlOO0FBQ0YiLCJmaWxlIjoic2NoZWR1bGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2NoZWR1bGUtdG9vbGJhcntcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XHJcbiAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAtNDBweDtcclxufVxyXG4uY2FsLWFycm93c3tcclxuICAgIHdpZHRoOiAxNjBweDtcclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHsgICAgXHJcbiAgICAuc2NoZWR1bGUtdG9vbGJhcntcclxuICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xyXG4gICAgICAgIGhlaWdodDogMTEycHg7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogLTExMnB4O1xyXG4gICAgfVxyXG4gICAgLmNhbC1tb2JpbGV7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDExMnB4ICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgICAuY2FsLWFycm93c3tcclxuICAgICAgICB3aWR0aDogYXV0bztcclxuICAgIH1cclxufSJdfQ== */\";","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { CalendarEvent, CalendarEventAction, CalendarEventTimesChangedEvent } from 'angular-calendar';\r\nimport { startOfDay, endOfDay, subDays, addDays, endOfMonth, isSameDay, isSameMonth, addHours, parseISO } from 'date-fns';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ScheduleDialogComponent } from './schedule-dialog/schedule-dialog.component';\r\nimport { AppSettings } from '../../app.settings';\r\nimport { Settings } from '../../app.settings.model';\r\nimport { Subject } from 'rxjs';\r\nimport { blockTransition } from '../../theme/utils/app-animation';\r\nimport { SchedulesService } from 'src/app/services/schedule.service';\r\nimport jwt_decode from \"../../../../node_modules/jwt-decode\";\r\n\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#ad2121',\r\n    secondary: '#FAE3E3'\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF'\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA'\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: 'app-schedule',\r\n  templateUrl: './schedule.component.html',\r\n  styleUrls: ['./schedule.component.scss'],\r\n  animations: [blockTransition],\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    '[@blockTransition]': ''\r\n  }\r\n})\r\nexport class ScheduleComponent implements OnInit {\r\n  view: string = 'month';\r\n  viewDate: Date = new Date();\r\n  activeDayIsOpen: boolean = true;\r\n  actions: CalendarEventAction[] = [{\r\n    label: '<i class=\"material-icons icon-sm white\">edit</i>',\r\n    onClick: ({ event }: { event: CalendarEvent }): void => {\r\n      this.openScheduleDialog(event);\r\n     \r\n      \r\n    }\r\n  }, {\r\n    label: '<i class=\"material-icons icon-sm white\">close</i>',\r\n    onClick: ({ event }: { event: CalendarEvent }): void => {\r\n      this.events = this.events.filter(iEvent => iEvent !== event);\r\n      this.deleteSchedule(event);\r\n      this.snackBar.open('Event deleted successfully!', null, {\r\n        duration: 1500\r\n      });\r\n    }\r\n  }];\r\n  events: CalendarEvent[] = [];\r\n  refresh: Subject<any> = new Subject();\r\n\r\n  token = localStorage.getItem('token');\r\n  decoded = jwt_decode(this.token);\r\n  userId = JSON.parse(JSON.stringify(this.decoded))._id;\r\n  public settings: Settings;\r\n  schedules: any;\r\n  tab = [];\r\n  constructor(public appSettings: AppSettings,\r\n    public dialog: MatDialog,\r\n    public snackBar: MatSnackBar, public scheduleService: SchedulesService) {\r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAllSchedules();\r\n\r\n  }\r\n\r\n  dayClicked({ date, events }: { date: Date, events: CalendarEvent[] }): void {\r\n    if (isSameMonth(date, this.viewDate)) {\r\n      if ((isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) || this.events.length === 0) {\r\n        this.activeDayIsOpen = false;\r\n      } else {\r\n        this.activeDayIsOpen = true;\r\n        this.viewDate = date;\r\n      }\r\n    }\r\n  }\r\n  public getAllSchedules(): void {\r\n    this.schedules = null; //for show spinner each time\r\n    this.scheduleService.getAllSchedules().subscribe((schedule: CalendarEvent[]) => {\r\n      this.tab = []\r\n      \r\n      schedule.forEach((event: any) => {\r\n        if (event.userOwner == this.userId) {\r\n          event.start = new Date(event.start)\r\n          event.actions = this.actions;\r\n          event._id=event._id;\r\n          event.descrip=event.description;\r\n          this.tab.push(event);\r\n\r\n        }\r\n      })\r\n      this.events = this.tab;\r\n    })\r\n  }\r\n  public addSchedule(schedule) {\r\n    this.scheduleService.addSchedule(schedule).subscribe(schedule => {\r\n      this.getAllSchedules()\r\n\r\n    });\r\n  }\r\n  public updateSchedule(schedule) {\r\n    this.scheduleService.updateSchedule(schedule._id, schedule).subscribe(schedule => {\r\n      this.getAllSchedules();\r\n    });\r\n  }\r\n  public deleteSchedule(schedule) {\r\n    this.scheduleService.deleteSchedule(schedule._id).subscribe(schedule => {\r\n      this.getAllSchedules();\r\n    });\r\n  }\r\n\r\n  openScheduleDialog(event) {\r\n    let dialogRef = this.dialog.open(ScheduleDialogComponent, {\r\n      data: event\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      let pati = result\r\n      \r\n        if (!result.isEdit) {\r\n          delete pati._id;\r\n          this.addSchedule(pati)\r\n \r\n        } else {\r\n          this.updateSchedule(result);\r\n        }\r\n\r\n      \r\n    });\r\n  }\r\n\r\n}","export default \"<app-content-header \\r\\n    [title]=\\\"'Schedule'\\\" \\r\\n    [hideBreadcrumb]=\\\"false\\\"\\r\\n    [hasBgImage]=\\\"true\\\" \\r\\n    [class]=\\\"'pb-5 cal-mobile'\\\"></app-content-header>\\r\\n\\r\\n<mat-toolbar color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"px-2 schedule-toolbar\\\">\\r\\n    <div class=\\\"cal-arrows\\\">                \\r\\n        <button mat-icon-button mwlCalendarPreviousView [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\">\\r\\n            <mat-icon *ngIf=\\\"!settings.rtl\\\">chevron_left</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"settings.rtl\\\">chevron_right</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button mwlCalendarToday [(viewDate)]=\\\"viewDate\\\">\\r\\n            <mat-icon>today</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button mwlCalendarNextView [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\">\\r\\n            <mat-icon *ngIf=\\\"settings.rtl\\\">chevron_left</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!settings.rtl\\\">chevron_right</mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n    <h2>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h2>\\r\\n    <div class=\\\"\\\">\\r\\n        <button mat-icon-button (click)=\\\"view = 'month'\\\">\\r\\n            <mat-icon>view_comfy</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button (click)=\\\"view = 'week'\\\">\\r\\n            <mat-icon>view_week</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button (click)=\\\"view = 'day'\\\">\\r\\n            <mat-icon>view_day</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button (click)=\\\"openScheduleDialog(null)\\\">\\r\\n            <mat-icon>add</mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\"> \\r\\n        <mat-card class=\\\"block p-0\\\">  \\r\\n            <div [ngSwitch]=\\\"view\\\">\\r\\n                <mwl-calendar-month-view\\r\\n                    *ngSwitchCase=\\\"'month'\\\"\\r\\n                    [viewDate]=\\\"viewDate\\\"\\r\\n                    [events]=\\\"events\\\"\\r\\n                    [refresh]=\\\"refresh\\\"\\r\\n                    [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\r\\n                    (dayClicked)=\\\"dayClicked($event.day)\\\">\\r\\n                </mwl-calendar-month-view>\\r\\n                <mwl-calendar-week-view\\r\\n                    *ngSwitchCase=\\\"'week'\\\"\\r\\n                    [viewDate]=\\\"viewDate\\\"\\r\\n                    [events]=\\\"events\\\"\\r\\n                    [refresh]=\\\"refresh\\\">\\r\\n                </mwl-calendar-week-view>\\r\\n                <mwl-calendar-day-view\\r\\n                    *ngSwitchCase=\\\"'day'\\\"\\r\\n                    [viewDate]=\\\"viewDate\\\"\\r\\n                    [events]=\\\"events\\\"\\r\\n                    [refresh]=\\\"refresh\\\">\\r\\n                </mwl-calendar-day-view>\\r\\n            </div>\\r\\n\\r\\n       </mat-card>\\r\\n    </div>\\r\\n</div>\";","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\r\nimport jwt_decode from \"../../../../../node_modules/jwt-decode\";\r\n\r\n@Component({\r\n  selector: 'app-schedule-dialog',\r\n  templateUrl: './schedule-dialog.component.html'\r\n})\r\nexport class ScheduleDialogComponent implements OnInit {\r\n  public form:FormGroup;\r\n   token = localStorage.getItem('token');\r\n  decoded = jwt_decode(this.token);\r\n  constructor(public dialogRef: MatDialogRef<ScheduleDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: any,\r\n              ) {\r\n    this.form = new FormGroup({\r\n      _id:new FormControl(''),\r\n      title: new FormControl('', [Validators.required, Validators.minLength(5)]),\r\n      start: new FormControl('', [Validators.required]),\r\n      descrip: new FormControl('', [Validators.required]),\r\n      isEdit : new FormControl(''),\r\n      userOwner: new FormControl(''),\r\n    });\r\n    this.form.patchValue({\r\n     \r\n      'isEdit' : false,\r\n      'userOwner': JSON.parse(JSON.stringify(this.decoded))._id,\r\n    })\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.data){\r\n      this.form.patchValue({\r\n        '_id':this.data._id,\r\n        'title': this.data.title,\r\n        'start': this.data.start,\r\n        'descrip': this.data.descrip,\r\n        'isEdit' : true,\r\n        'userOwner': JSON.parse(JSON.stringify(this.decoded))._id,\r\n      })\r\n    }\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CalendarModule } from 'angular-calendar';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { ScheduleComponent } from './schedule.component';\r\nimport { ScheduleDialogComponent } from './schedule-dialog/schedule-dialog.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: ScheduleComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CalendarModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    ScheduleComponent, \r\n    ScheduleDialogComponent\r\n  ],\r\n  entryComponents: [\r\n    ScheduleDialogComponent\r\n  ]\r\n})\r\nexport class ScheduleModule { }"]}