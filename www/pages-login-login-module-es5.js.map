{"version":3,"sources":["webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.module.ts","webpack:///src/app/pages/login/login.component.html"],"names":["LoginComponent","appSettings","formService","router","settings","form","password","required","email","loginUser","contacts","values","setValue","value","subscribe","res","response","localStorage","setItem","token","navigate","setTimeout","loadingSpinner","selector","template","routes","path","component","pathMatch","LoginModule","imports","forChild","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAcaA,cAAc;AAKzB,gCAAmBC,WAAnB,EAAoDC,WAApD,EAAuFC,MAAvF,EAAuG;AAAA;;AAApF,eAAAF,WAAA,GAAAA,WAAA;AAAiC,eAAAC,WAAA,GAAAA,WAAA;AAAmC,eAAAC,MAAA,GAAAA,MAAA;AACrF,eAAKC,QAAL,GAAgB,KAAKH,WAAL,CAAiBG,QAAjC;AACA,eAAKC,IAAL,GAAY,IAAI,wDAAJ,CAAc;AACxBC,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWC,QAAZ,CAApB,CADc;AAExBC,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWD,QAAZ,CAApB;AAFiB,WAAd,CAAZ;AAKD;;AAZwB;AAAA;AAAA,qCAcjB;AACN,iBAAKE,SAAL,GAAiB,IAAI,wDAAJ,CAAc;AAC7BH,sBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWC,QAAZ,CAApB,CADmB;AAE7BG,sBAAQ,EAAE,IAAI,wDAAJ,CAAc;AACtBF,qBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWD,QAAZ,CAApB;AADe,eAAd;AAFmB,aAAd,CAAjB;AAOD;AAtBwB;AAAA;AAAA,mCAuBTI,MAvBS,EAuBK;AAAA;;AAC5B,iBAAKF,SAAL,CAAeG,QAAf,CAAwB;AACtBN,sBAAQ,EAAE,KAAKD,IAAL,CAAUQ,KAAV,CAAgBP,QADJ;AAEtBI,sBAAQ,EAAE;AAAEF,qBAAK,EAAE,KAAKH,IAAL,CAAUQ,KAAV,CAAgBL;AAAzB;AAFY,aAAxB;AAIA,iBAAKN,WAAL,CAAiBO,SAAjB,CAA2B,KAAKJ,IAAL,CAAUQ,KAArC,EAA4CC,SAA5C,CAAsD,UAACC,GAAD,EAAS;AAC7D,mBAAI,CAACC,QAAL,GAAgBD,GAAhB;AACAE,0BAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,KAAI,CAACF,QAAL,CAAcG,KAA5C;;AACA,mBAAI,CAAChB,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD,aAJD;AAMD;AAlCwB;AAAA;AAAA,4CAoCP;AAAA;;AAChBC,sBAAU,CAAC,YAAM;AACf,oBAAI,CAACjB,QAAL,CAAckB,cAAd,GAA+B,KAA/B;AACD,aAFS,CAAV;AAGD;AAxCwB;;AAAA;AAAA,S;;;;gBAXlB;;gBAGA;;gBALA;;;;AAaItB,oBAAc,eAL1B,gEAAU;AACTuB,gBAAQ,EAAE,WADD;AAETC,gBAAQ,EAAR;AAFS,OAAV,CAK0B,E,iCAKM,yD,EAAkC,2E,EAA8B,sD,EALtE,GAAdxB,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPN,UAAMyB,MAAM,GAAG,CACpB;AAAEC,YAAI,EAAE,EAAR;AAAYC,iBAAS,EAAE,+DAAvB;AAAuCC,iBAAS,EAAE;AAAlD,OADoB,CAAf;;UAgBMC,WAAW;AAAA;AAAA,O;;AAAXA,iBAAW,eAZvB,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,6DAAaC,QAAb,CAAsBN,MAAtB,CAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,kEALO,CADD;AAQRO,oBAAY,EAAE,CACZ,+DADY;AARN,OAAT,CAYuB,GAAXH,WAAW,CAAX;;;;;;;;;;;;;;;;ACvBb;AAAe;;;AAAA","file":"pages-login-login-module-es5.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AppSettings } from '../../app.settings';\r\nimport { Settings } from '../../app.settings.model';\r\nimport { GuardserviceService } from 'src/app/services/guardservice.service';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { UsersService } from 'src/app/services/users.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\n\r\nexport class LoginComponent {\r\n  public form: FormGroup;\r\n  public settings: Settings;\r\n  response;\r\n  loginUser;\r\n  constructor(public appSettings:AppSettings, private formService: LoginService, private router: Router) { \r\n    this.settings = this.appSettings.settings; \r\n    this.form = new FormGroup({\r\n      password: new FormControl('', [Validators.required]),\r\n      email: new FormControl('', [Validators.required]),\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loginUser = new FormGroup({\r\n      password: new FormControl('', [Validators.required]),\r\n      contacts: new FormGroup({\r\n        email: new FormControl('', [Validators.required]),\r\n      }),\r\n\r\n    })\r\n  }\r\n  public onSubmit(values: Object): void {\r\n    this.loginUser.setValue({\r\n      password: this.form.value.password,\r\n      contacts: { email: this.form.value.email }\r\n    })\r\n    this.formService.loginUser(this.form.value).subscribe((res) => {\r\n      this.response = res\r\n      localStorage.setItem('token', this.response.token);\r\n      this.router.navigate(['/']);\r\n    })\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.settings.loadingSpinner = false;\r\n    });\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { LoginComponent } from './login.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: LoginComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    LoginComponent\r\n  ]\r\n})\r\nexport class LoginModule { }","export default \"<mat-sidenav-container class=\\\"h-100\\\">\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"h-100\\\">\\r\\n       <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\" fxFlex=\\\"90\\\" fxFlex.gt-sm=\\\"30\\\" fxFlex.sm=\\\"60\\\" class=\\\"mat-elevation-z6\\\">\\r\\n            <app-content-header \\r\\n                [icon]=\\\"'exit_to_app'\\\" \\r\\n                [title]=\\\"'Login'\\\" \\r\\n                [hideBreadcrumb]=\\\"true\\\"\\r\\n                [hasBgImage]=\\\"true\\\" \\r\\n                [class]=\\\"'py-4'\\\"></app-content-header>            \\r\\n            <div class=\\\"p-3\\\">\\r\\n                <!-- <a mat-button routerLink=\\\"/register\\\" color=\\\"accent\\\" class=\\\"w-100\\\">Don't have an account? Sign up now!</a> -->\\r\\n                <mat-form-field class=\\\"w-100\\\">\\r\\n                    <mat-icon matPrefix class=\\\"mat-icon-sm mb-2 mr-2 secondary-text-color\\\">mail</mat-icon>\\r\\n                    <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\r\\n                    <mat-error *ngIf=\\\"form.controls.email.errors?.required\\\">Email is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"form.controls.email.hasError('invalidEmail')\\\">Invalid email address</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"w-100\\\">\\r\\n                    <mat-icon matPrefix class=\\\"mat-icon-sm mb-2 mr-2 secondary-text-color\\\">lock</mat-icon>\\r\\n                    <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" formControlName=\\\"password\\\">\\r\\n                    <mat-error *ngIf=\\\"form.controls.password.errors?.required\\\">Password is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"form.controls.password.hasError('minlength')\\\">Password isn't long enough, minimum of 6 characters</mat-error>\\r\\n                </mat-form-field>               \\r\\n                <!-- <mat-slide-toggle formControlName=\\\"rememberMe\\\" class=\\\"my-2\\\">Keep me signed in</mat-slide-toggle> -->\\r\\n                <button mat-raised-button color=\\\"primary\\\" class=\\\"mat-elevation-z6 w-100 mt-3\\\" type=\\\"submit\\\">SIGN IN</button>\\r\\n            </div>\\r\\n        </form>\\r\\n  </div>\\r\\n</mat-sidenav-container>\";"]}